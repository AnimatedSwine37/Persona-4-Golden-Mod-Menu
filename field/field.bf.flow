import( "../build/input/extracted/field/script/field.bf" );
import( "../ModMenu.flow" );
import( "../FirstTimeSetup.flow" );

//EXTENSIONS
import ( "../FindAFriend.flow" ); //Fast travel to social link locations
import ( "../QuickTravelPlus.flow" ); //Extended quickTravel locations for town/school
import ( "../VRGameOverSkip.flow" ); //Skips velvet room scene after game over
import ( "../DungeonOptions.flow" ); //Fast travel to any dungeon floor after their deadlines pass and organize party on any floor
import ( "../ConsistentReaperField.flow" ); //Hooks field functions for consistent reaper 
	//if used with DungeonTravel make sure to set ConsistentReaper bool to true in SelectFloor() (DungeonTravel.flow) and use_gohom (GohoM.flow)
	//also build dungeon.bf.flow with ConsistentReaper.flow uncommented in the imports

void order_party_hook()
{
	//BIT_ON(6420) //Disable First Time Setup
	//BIT_OFF(6421) //Disable Mod Menu
	bool modMenu = BIT_CHK(6421); //Mod menu with many different debugging options
	bool quickTravel = true; //Normal square menu (enhanced with QuickTravelPlus)
	bool mobileCalendar = BIT_CHK(6423); //Quickly open Calendar
	bool findAFriend = BIT_CHK(6425); //Fast travel to social link locations
	bool saveAnywhere = BIT_CHK(6426); //Save anywhere
	//BIT_OFF(6429) //Disable Options
	bool options = BIT_CHK(6429); //Custom Square Menu configuration
	
	//First Time Setup
	if (!BIT_CHK(6420))
	{
		MenuOptions();
	}
	
	//Just Mod Menu (So it's not Mod Menu and Exit)
	if (modMenu && !quickTravel && !mobileCalendar && !findAFriend && !options)
		ModMenuDisplay();
	//Just QuickTravel (Only useful if you have QuickTravelPlus uncommented) (So it's not QuickTravel and Exit)
	else if (!modMenu && quickTravel && !mobileCalendar && !findAFriend && !options)
	{
		if ( GET_FLOOR_ID() > 0)
		{
			dungeon_order();
		}
		else
		{
			field_order();
		}
	}
	//Multiple options
	else 
	{
		int dungeon = GET_FLOOR_ID();
		int fieldMajor = GET_FIELD_MAJOR();
		
		if (dungeon > 0 || ((fieldMajor >= 6 && fieldMajor <= 11) || (fieldMajor == 17 || fieldMajor == 18)))
		{
			int SelectMask = 0;
			if (!quickTravel)
				SelectMask = SelectMask + 1;
			if ( GET_FLOOR_ID() > 0 || !findAFriend)
				SelectMask = SelectMask + 2;
			if (!mobileCalendar || dungeon > 0)
				SelectMask = SelectMask + 4;
			if (!saveAnywhere)
				SelectMask = SelectMask + 8;
			if (!modMenu)
				SelectMask = SelectMask + 16;
			if (!options)
				SelectMask = SelectMask + 32;
			
			// Enable shortcut to close
			SET_SEL_CHOICE_KEYBIND( 14, 6 );
			//Prompt user to choose an option if in an appropriate area
			int selection = 0;
			if ( GET_FLOOR_ID() > 0)
				selection = ADV_SEL( Square_Menu_Text, Square_Menu_Dng, SelectMask);
			else
				selection = ADV_SEL( Square_Menu_Text, Square_Menu, SelectMask);
			switch (selection)
			{
				case 0: //QuickTravel
					if ( GET_FLOOR_ID() > 0)
					{
						dungeon_order();
					}
					else
					{
						field_order();
					}
					break;
				case 1: //FindAFriend
					generate_hangout_menu();
					break;
				case 2: //MobileCalendar
					OPEN_CALENDAR();
					break;
				case 3: //SaveAnywhere
					NS_SAVE();
					break;
				case 4: //ModMenu
					ModMenuDisplay();
					break;
				case 5: //Options
					MenuOptions();
					break;
				case 6: //Exit
					break;
			}
		}
		else if(modMenu && GET_FLOOR_ID() == 0)
		{
			//Show Mod Menu by default if not in an area with QuickTravel options
			ModMenuDisplay();
		}
	}
}
